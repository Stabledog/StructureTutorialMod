plugins {
	id 'fabric-loom' version '0.7-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	// Repo for getting Blame from
	maven {	url "https://nexus.resourcefulbees.com/repository/maven-public/" }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "io.github.prospector:modmenu:${project.mod_menu_version}"

	// I recommend having Blame on in your development environment as it can give you more info of what is
	// broken with your Jigsaw structure. It is super useful!. Just uncomment out this line and refresh gradle.
	// modImplementation "com.telepathicgrunt:Blame-Fabric:1.16.5-3.0.0-fabric"
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}


// Bonus stuff!
import groovy.json.JsonParserType
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
processResources {

	// Will minify the JSON files of your mod when you build the jar.
	// Helps reduce files size! Minify means it will strip whitespace
	// and turn the JSON files into 1 liners.
    doLast {
        def jsonMinifyStart = System.currentTimeMillis()
        def jsonMinified = 0
        def jsonBytesSaved = 0
        fileTree(dir: outputs.files.asPath, include: '**/*.json').each {
            File file = it
            jsonMinified++
            def oldLength = file.length()
			file.text = JsonOutput.toJson(new JsonSlurper(type: JsonParserType.LAX).parse(file))
            jsonBytesSaved += oldLength - file.length()
        }
        println('Minified ' + jsonMinified + ' json files. Saved ' + jsonBytesSaved + ' bytes. Took ' + (System.currentTimeMillis() - jsonMinifyStart) + 'ms.')
    }
}
